[settings]

# Enable caching
caching = true

# Show build progress.
verbose = true

# Show detailed debug information.
debug = true

# Fail on page processing errors.
strict = true

# Where generated files go.
build_dir = "build/"

# Where page files are stored.
site_dir = "site/"

# HTML page skeleton file to insert content into.
default_template_file = "templates/main.html"

# Insert the content in <main> after existing children.
default_content_selector = "main"
default_content_action = "append_child"

# Page considered the section index.
index_page = "index"

page_file_extensions = ["html", "md"]

doctype = "<!DOCTYPE html>"

# If a page already has a document type declaration, keep the declaration.
keep_doctype = true

# Automatically load Lua plugins from plugins/
# E.g. plugins/reading-time.lua is automatically loaded as "reading-time"
# widget.
plugin_discovery = true
plugin_dirs = ["plugins"]

# Files that contain an <html> element are considered complete pages rather than
# page bodies, even in the "website generator" mode.
# This allows you to use a unique layout for some pages and still have them
# processed by widgets.
complete_page_selector = "html"

# Insert whitespace into HTML for better readability
# When set to false, the original whitespace (if any) will be preserved as is.
pretty_print_html = true

# Enables or disables clean URLs.
# When false: site/about.html -> build/about.html
# When true: site/about.html -> build/about/index.html
clean_urls = true

# Options in the [custom_options] table aren't soupault built-ins.
# It's a table for options that can be shared between multiple plugins.
[custom_options]

# Number of "lastest post" to display on the main page.
blog_summary_max_entries = 5

[preprocessors]
md = "pandoc -f markdown+smart -t html"

# Autogenerated section index settings.
[index]
index = true
sort_descending = true
sort_type = "calendar" # numeric | lexicographic | calendar
sort_by = "date" # Which index field to use a sorting key
date_formats = ["On %b %d, %Y"] # See https://man7.org/linux/man-pages/man1/date.1.html
strict_sort = true
section = "blog/"
extract_after_widgets = ['make-post-header']

# A directory with a .leaf file in it is treated as hand-made "clean URL",
# rather than a section.
leaf_file = ".leaf"

[index.fields]
title = { selector = ["#post-title", "h1"] }
excerpt = { selector = ["#post-excerpt", "p"] }
date = { selector = ["#post-date", "time"] }
tags = { selector = ".post-tag", select_all = true }
# reading_time = { selector = "#reading-time" }

[index.views.blog-index]
# Insert generated index into an element that matches "#blog-index" selector.
index_selector = "#blog-entries"

# Only extract metadata from pages in site/blog/*
section = "blog"

# Jingoo template for rendering extracted metadata.
index_template = """
  {% for e in entries %}
  <h3><a href="{{e.url}}">{{e.title}}</a></h3>
  <small><em>
  <time id="post-date" datetime="{{e.date}}">{{e.date}}</time> by Bruno Flores
  {% if e.tags %}(
     {%- for t in e.tags -%}
       <a href="/blog/{{t}}"><span class="post-tag">{{t}}</span></a>{% if not loop.last %}, {% endif %}
     {%- endfor -%}
  ){% endif %}
  </em></small>
  {{e.excerpt}}
  <a href="{{e.url}}">Read more</a>
  {% endfor %}
"""

[index.views.pl_theory]
index_selector = "#pl-theory-entries"

# Only extract metadata from pages in site/blog/*
section = "blog"

# Jingoo template for rendering extracted metadata.
index_template = """
  {% for e in entries %}
  {% if "pl-theory" in e.tags -%}
  <h2><a href="{{e.url}}">{{e.title}}</a></h2>
  <small><em>
  <time id="post-date" datetime="{{e.date}}">{{e.date}}</time> by Bruno Flores
  {% if e.tags %}(
     {%- for t in e.tags -%}
       <a href="/blog/{{t}}"><span class="post-tag">{{t}}</span></a>{% if not loop.last %}, {% endif %}
     {%- endfor -%}
  ){% endif %}
  </em></small>
  {{e.excerpt}}
  <a href="{{e.url}}">Read more</a>
  {%- endif %}
  {% endfor %}
"""

## Widgets

# Takes the content of the first #page-title element or <h1> and inserts it into
# the <title> default is used if page has no elements matching those selectors.
[widgets.set-page-title]
widget = "title"

# Must run only after the header with an <h1 id="post-title"> element is
# inserted, which affects the blog section pages.
after = ["insert-header", "make-post-header"]

selector = ["#page-title", "#post-title", "nav .nav-active"]
default = "Compiler Team"
append = " &mdash; Bruno Flores"

[widgets.insert-projects-list]
widget = "include"

selector = "#projects-list"
action = "replace_element"
file = "templates/projects-list.md"

# Inserts the contents of templates/header.html right before the <main> element
# There's a variety of actions, including prepend_child and replace_content.
[widgets.insert-header]
widget = "include"

selector = "main"
action = "insert_before"
file = "templates/header.html"

# This widget comes from plugins/section-link-highlight.lua
# It highlights the "active" link in the navigation menu,
# that is, the link that matches the current page URL
[widgets.highlight-active-link]
widget = "section-link-highlight"
# Must run only after the header with a navigation menu is inserted.
after = ["insert-header"]
selector = "nav"
active_link_class = "nav-active"

# Inserts the contents of templates/footer.html at the end of the <body>.
[widgets.insert-footer]
widget = "include"
selector = "body"
action = "append_child"
file = "templates/footer.html"

[widgets.make-post-header]
widget = "post-header"
section = "blog/"
exclude_page = "blog/index.md"

content_container_selector = "main"

post_header_template = '''
  <div id="post-header">
    <h2 id="post-title">{{title}}</h2>
    <small><em>
      <time id="post-date" datetime="{{date}}">{{date}}</time> by Bruno Flores
      {% if tags %}(
         {%- for t in tags -%}
           <a href="/blog/{{t}}"><span class="post-tag">{{t}}</span></a>{% if not loop.last %}, {% endif %}
         {%- endfor -%}
      ){% endif %}
    </em></small>
  </div>
'''

# Inserts a table of contents generated from page headings <h1> to <h6>.
[widgets.table-of-contents]
# exclude_path_regex = '/index(.*)'

widget = "toc"
selector = "#generated-toc"

min_level = 3
max_level = 6

ignore_heading_selectors = [".notoc"]

toc_list_class = "toc"
toc_class_levels = false

valid_html = true
numbered_list = false

heading_links = false
heading_link_text = "â†’ "
heading_link_class = "here"

use_heading_slug = true

[widgets.insert-footnotes-container]
widget = "insert-if"

selector = "main"
check_selector = ".footnote"
html = '<div id="footnotes"> </div>'

[widgets.footnotes]
widget = "footnotes"

after = "insert-footnotes-container"

selector = "div#footnotes"
footnote_selector = [".footnote"]
footnote_link_class = "footnote"
back_links = true
link_id_prepend = "footnote-"
back_link_id_append = "-ref"

[widgets.graphviz-svg]
widget = 'preprocess_element'
selector = 'pre.graphviz'
command = 'dot -Tsvg'
action = "replace_element"

[widgets.highlight]
widget = "preprocess_element"
selector = "pre.language"
# See http://www.andre-simon.de/doku/highlight/en/theme-samples.php
command = 'highlight --out-format=html --fragment --inline-css --style=seashell --syntax=ocaml'

[widgets.line-numbers]
widget = "preprocess_element"
selector = "pre.lnum"
command = "cat -n"
parse = false

[widgets.generated-on]
widget = "exec"
selector = "#generated-on"
command = "date -R"
parse = true
after = "insert-footer"

[widgets.inline-math]
widget = "preprocess_element"
selector = "imath"
command = "scripts/katex.sh"
action = "replace_element"
parse=true

[widgets.display-math]
widget = "preprocess_element"
selector = "pre.display-math"
command = "scripts/math.sh"
action = "replace_element"
parse = true

[widgets.display-ocaml-type]
widget = "preprocess_element"
selector = "pre.language.ocaml.type"
command = "scripts/ocaml-type.sh"
action = "append_child"
parse = true
